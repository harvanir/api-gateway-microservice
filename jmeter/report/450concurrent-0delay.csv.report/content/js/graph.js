/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 7546.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 9.0], [4.9, 9.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 16.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 16.0], [19.9, 16.0], [20.0, 16.0], [20.1, 17.0], [20.2, 17.0], [20.3, 17.0], [20.4, 17.0], [20.5, 17.0], [20.6, 17.0], [20.7, 17.0], [20.8, 17.0], [20.9, 17.0], [21.0, 17.0], [21.1, 17.0], [21.2, 17.0], [21.3, 17.0], [21.4, 17.0], [21.5, 17.0], [21.6, 17.0], [21.7, 17.0], [21.8, 17.0], [21.9, 17.0], [22.0, 17.0], [22.1, 17.0], [22.2, 17.0], [22.3, 17.0], [22.4, 17.0], [22.5, 17.0], [22.6, 18.0], [22.7, 18.0], [22.8, 18.0], [22.9, 18.0], [23.0, 18.0], [23.1, 18.0], [23.2, 18.0], [23.3, 18.0], [23.4, 18.0], [23.5, 18.0], [23.6, 18.0], [23.7, 18.0], [23.8, 18.0], [23.9, 18.0], [24.0, 18.0], [24.1, 18.0], [24.2, 18.0], [24.3, 18.0], [24.4, 18.0], [24.5, 18.0], [24.6, 18.0], [24.7, 18.0], [24.8, 18.0], [24.9, 18.0], [25.0, 18.0], [25.1, 18.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 19.0], [25.6, 19.0], [25.7, 19.0], [25.8, 19.0], [25.9, 19.0], [26.0, 19.0], [26.1, 19.0], [26.2, 19.0], [26.3, 19.0], [26.4, 19.0], [26.5, 19.0], [26.6, 19.0], [26.7, 19.0], [26.8, 19.0], [26.9, 19.0], [27.0, 19.0], [27.1, 19.0], [27.2, 19.0], [27.3, 19.0], [27.4, 19.0], [27.5, 19.0], [27.6, 19.0], [27.7, 19.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 20.0], [30.0, 20.0], [30.1, 20.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 22.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 24.0], [38.6, 24.0], [38.7, 24.0], [38.8, 24.0], [38.9, 24.0], [39.0, 24.0], [39.1, 24.0], [39.2, 24.0], [39.3, 24.0], [39.4, 24.0], [39.5, 24.0], [39.6, 24.0], [39.7, 24.0], [39.8, 24.0], [39.9, 24.0], [40.0, 24.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 24.0], [40.5, 24.0], [40.6, 24.0], [40.7, 24.0], [40.8, 24.0], [40.9, 24.0], [41.0, 24.0], [41.1, 25.0], [41.2, 25.0], [41.3, 25.0], [41.4, 25.0], [41.5, 25.0], [41.6, 25.0], [41.7, 25.0], [41.8, 25.0], [41.9, 25.0], [42.0, 25.0], [42.1, 25.0], [42.2, 25.0], [42.3, 25.0], [42.4, 25.0], [42.5, 25.0], [42.6, 25.0], [42.7, 25.0], [42.8, 25.0], [42.9, 25.0], [43.0, 25.0], [43.1, 25.0], [43.2, 25.0], [43.3, 25.0], [43.4, 25.0], [43.5, 25.0], [43.6, 26.0], [43.7, 26.0], [43.8, 26.0], [43.9, 26.0], [44.0, 26.0], [44.1, 26.0], [44.2, 26.0], [44.3, 26.0], [44.4, 26.0], [44.5, 26.0], [44.6, 26.0], [44.7, 26.0], [44.8, 26.0], [44.9, 26.0], [45.0, 26.0], [45.1, 26.0], [45.2, 26.0], [45.3, 26.0], [45.4, 26.0], [45.5, 26.0], [45.6, 26.0], [45.7, 26.0], [45.8, 26.0], [45.9, 26.0], [46.0, 27.0], [46.1, 27.0], [46.2, 27.0], [46.3, 27.0], [46.4, 27.0], [46.5, 27.0], [46.6, 27.0], [46.7, 27.0], [46.8, 27.0], [46.9, 27.0], [47.0, 27.0], [47.1, 27.0], [47.2, 27.0], [47.3, 27.0], [47.4, 27.0], [47.5, 27.0], [47.6, 27.0], [47.7, 27.0], [47.8, 27.0], [47.9, 27.0], [48.0, 27.0], [48.1, 27.0], [48.2, 27.0], [48.3, 28.0], [48.4, 28.0], [48.5, 28.0], [48.6, 28.0], [48.7, 28.0], [48.8, 28.0], [48.9, 28.0], [49.0, 28.0], [49.1, 28.0], [49.2, 28.0], [49.3, 28.0], [49.4, 28.0], [49.5, 28.0], [49.6, 28.0], [49.7, 28.0], [49.8, 28.0], [49.9, 28.0], [50.0, 28.0], [50.1, 28.0], [50.2, 28.0], [50.3, 28.0], [50.4, 28.0], [50.5, 29.0], [50.6, 29.0], [50.7, 29.0], [50.8, 29.0], [50.9, 29.0], [51.0, 29.0], [51.1, 29.0], [51.2, 29.0], [51.3, 29.0], [51.4, 29.0], [51.5, 29.0], [51.6, 29.0], [51.7, 29.0], [51.8, 29.0], [51.9, 29.0], [52.0, 29.0], [52.1, 29.0], [52.2, 29.0], [52.3, 29.0], [52.4, 29.0], [52.5, 29.0], [52.6, 29.0], [52.7, 30.0], [52.8, 30.0], [52.9, 30.0], [53.0, 30.0], [53.1, 30.0], [53.2, 30.0], [53.3, 30.0], [53.4, 30.0], [53.5, 30.0], [53.6, 30.0], [53.7, 30.0], [53.8, 30.0], [53.9, 30.0], [54.0, 30.0], [54.1, 30.0], [54.2, 30.0], [54.3, 30.0], [54.4, 30.0], [54.5, 30.0], [54.6, 30.0], [54.7, 31.0], [54.8, 31.0], [54.9, 31.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 31.0], [55.4, 31.0], [55.5, 31.0], [55.6, 31.0], [55.7, 31.0], [55.8, 31.0], [55.9, 31.0], [56.0, 31.0], [56.1, 31.0], [56.2, 31.0], [56.3, 31.0], [56.4, 31.0], [56.5, 31.0], [56.6, 32.0], [56.7, 32.0], [56.8, 32.0], [56.9, 32.0], [57.0, 32.0], [57.1, 32.0], [57.2, 32.0], [57.3, 32.0], [57.4, 32.0], [57.5, 32.0], [57.6, 32.0], [57.7, 32.0], [57.8, 32.0], [57.9, 32.0], [58.0, 32.0], [58.1, 32.0], [58.2, 32.0], [58.3, 32.0], [58.4, 33.0], [58.5, 33.0], [58.6, 33.0], [58.7, 33.0], [58.8, 33.0], [58.9, 33.0], [59.0, 33.0], [59.1, 33.0], [59.2, 33.0], [59.3, 33.0], [59.4, 33.0], [59.5, 33.0], [59.6, 33.0], [59.7, 33.0], [59.8, 33.0], [59.9, 33.0], [60.0, 33.0], [60.1, 33.0], [60.2, 34.0], [60.3, 34.0], [60.4, 34.0], [60.5, 34.0], [60.6, 34.0], [60.7, 34.0], [60.8, 34.0], [60.9, 34.0], [61.0, 34.0], [61.1, 34.0], [61.2, 34.0], [61.3, 34.0], [61.4, 34.0], [61.5, 34.0], [61.6, 34.0], [61.7, 34.0], [61.8, 35.0], [61.9, 35.0], [62.0, 35.0], [62.1, 35.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 35.0], [62.6, 35.0], [62.7, 35.0], [62.8, 35.0], [62.9, 35.0], [63.0, 35.0], [63.1, 35.0], [63.2, 35.0], [63.3, 35.0], [63.4, 36.0], [63.5, 36.0], [63.6, 36.0], [63.7, 36.0], [63.8, 36.0], [63.9, 36.0], [64.0, 36.0], [64.1, 36.0], [64.2, 36.0], [64.3, 36.0], [64.4, 36.0], [64.5, 36.0], [64.6, 36.0], [64.7, 36.0], [64.8, 36.0], [64.9, 37.0], [65.0, 37.0], [65.1, 37.0], [65.2, 37.0], [65.3, 37.0], [65.4, 37.0], [65.5, 37.0], [65.6, 37.0], [65.7, 37.0], [65.8, 37.0], [65.9, 37.0], [66.0, 37.0], [66.1, 37.0], [66.2, 37.0], [66.3, 38.0], [66.4, 38.0], [66.5, 38.0], [66.6, 38.0], [66.7, 38.0], [66.8, 38.0], [66.9, 38.0], [67.0, 38.0], [67.1, 38.0], [67.2, 38.0], [67.3, 38.0], [67.4, 38.0], [67.5, 38.0], [67.6, 39.0], [67.7, 39.0], [67.8, 39.0], [67.9, 39.0], [68.0, 39.0], [68.1, 39.0], [68.2, 39.0], [68.3, 39.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 40.0], [69.0, 40.0], [69.1, 40.0], [69.2, 40.0], [69.3, 40.0], [69.4, 40.0], [69.5, 40.0], [69.6, 40.0], [69.7, 40.0], [69.8, 40.0], [69.9, 40.0], [70.0, 40.0], [70.1, 41.0], [70.2, 41.0], [70.3, 41.0], [70.4, 41.0], [70.5, 41.0], [70.6, 41.0], [70.7, 41.0], [70.8, 41.0], [70.9, 41.0], [71.0, 41.0], [71.1, 41.0], [71.2, 42.0], [71.3, 42.0], [71.4, 42.0], [71.5, 42.0], [71.6, 42.0], [71.7, 42.0], [71.8, 42.0], [71.9, 42.0], [72.0, 42.0], [72.1, 42.0], [72.2, 42.0], [72.3, 43.0], [72.4, 43.0], [72.5, 43.0], [72.6, 43.0], [72.7, 43.0], [72.8, 43.0], [72.9, 43.0], [73.0, 43.0], [73.1, 43.0], [73.2, 43.0], [73.3, 44.0], [73.4, 44.0], [73.5, 44.0], [73.6, 44.0], [73.7, 44.0], [73.8, 44.0], [73.9, 44.0], [74.0, 44.0], [74.1, 44.0], [74.2, 44.0], [74.3, 45.0], [74.4, 45.0], [74.5, 45.0], [74.6, 45.0], [74.7, 45.0], [74.8, 45.0], [74.9, 45.0], [75.0, 45.0], [75.1, 45.0], [75.2, 46.0], [75.3, 46.0], [75.4, 46.0], [75.5, 46.0], [75.6, 46.0], [75.7, 46.0], [75.8, 46.0], [75.9, 46.0], [76.0, 47.0], [76.1, 47.0], [76.2, 47.0], [76.3, 47.0], [76.4, 47.0], [76.5, 47.0], [76.6, 47.0], [76.7, 47.0], [76.8, 48.0], [76.9, 48.0], [77.0, 48.0], [77.1, 48.0], [77.2, 48.0], [77.3, 48.0], [77.4, 48.0], [77.5, 48.0], [77.6, 49.0], [77.7, 49.0], [77.8, 49.0], [77.9, 49.0], [78.0, 49.0], [78.1, 49.0], [78.2, 49.0], [78.3, 50.0], [78.4, 50.0], [78.5, 50.0], [78.6, 50.0], [78.7, 50.0], [78.8, 50.0], [78.9, 50.0], [79.0, 51.0], [79.1, 51.0], [79.2, 51.0], [79.3, 51.0], [79.4, 51.0], [79.5, 51.0], [79.6, 52.0], [79.7, 52.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 53.0], [80.4, 53.0], [80.5, 53.0], [80.6, 53.0], [80.7, 53.0], [80.8, 53.0], [80.9, 54.0], [81.0, 54.0], [81.1, 54.0], [81.2, 54.0], [81.3, 54.0], [81.4, 55.0], [81.5, 55.0], [81.6, 55.0], [81.7, 55.0], [81.8, 55.0], [81.9, 55.0], [82.0, 56.0], [82.1, 56.0], [82.2, 56.0], [82.3, 56.0], [82.4, 56.0], [82.5, 57.0], [82.6, 57.0], [82.7, 57.0], [82.8, 57.0], [82.9, 57.0], [83.0, 58.0], [83.1, 58.0], [83.2, 58.0], [83.3, 58.0], [83.4, 58.0], [83.5, 59.0], [83.6, 59.0], [83.7, 59.0], [83.8, 59.0], [83.9, 60.0], [84.0, 60.0], [84.1, 60.0], [84.2, 60.0], [84.3, 60.0], [84.4, 61.0], [84.5, 61.0], [84.6, 61.0], [84.7, 61.0], [84.8, 62.0], [84.9, 62.0], [85.0, 62.0], [85.1, 62.0], [85.2, 63.0], [85.3, 63.0], [85.4, 63.0], [85.5, 64.0], [85.6, 64.0], [85.7, 64.0], [85.8, 64.0], [85.9, 65.0], [86.0, 65.0], [86.1, 65.0], [86.2, 66.0], [86.3, 66.0], [86.4, 66.0], [86.5, 67.0], [86.6, 67.0], [86.7, 67.0], [86.8, 67.0], [86.9, 68.0], [87.0, 68.0], [87.1, 68.0], [87.2, 69.0], [87.3, 69.0], [87.4, 70.0], [87.5, 70.0], [87.6, 70.0], [87.7, 71.0], [87.8, 71.0], [87.9, 71.0], [88.0, 72.0], [88.1, 72.0], [88.2, 73.0], [88.3, 73.0], [88.4, 74.0], [88.5, 74.0], [88.6, 74.0], [88.7, 75.0], [88.8, 75.0], [88.9, 76.0], [89.0, 76.0], [89.1, 77.0], [89.2, 77.0], [89.3, 78.0], [89.4, 79.0], [89.5, 79.0], [89.6, 80.0], [89.7, 80.0], [89.8, 81.0], [89.9, 81.0], [90.0, 82.0], [90.1, 83.0], [90.2, 84.0], [90.3, 84.0], [90.4, 85.0], [90.5, 86.0], [90.6, 87.0], [90.7, 87.0], [90.8, 88.0], [90.9, 89.0], [91.0, 90.0], [91.1, 91.0], [91.2, 92.0], [91.3, 93.0], [91.4, 94.0], [91.5, 95.0], [91.6, 96.0], [91.7, 97.0], [91.8, 99.0], [91.9, 100.0], [92.0, 102.0], [92.1, 103.0], [92.2, 105.0], [92.3, 106.0], [92.4, 108.0], [92.5, 109.0], [92.6, 111.0], [92.7, 113.0], [92.8, 115.0], [92.9, 118.0], [93.0, 120.0], [93.1, 122.0], [93.2, 125.0], [93.3, 128.0], [93.4, 131.0], [93.5, 135.0], [93.6, 139.0], [93.7, 143.0], [93.8, 147.0], [93.9, 151.0], [94.0, 156.0], [94.1, 161.0], [94.2, 166.0], [94.3, 172.0], [94.4, 179.0], [94.5, 186.0], [94.6, 193.0], [94.7, 201.0], [94.8, 212.0], [94.9, 222.0], [95.0, 235.0], [95.1, 255.0], [95.2, 311.0], [95.3, 1016.0], [95.4, 1021.0], [95.5, 1024.0], [95.6, 1027.0], [95.7, 1029.0], [95.8, 1030.0], [95.9, 1032.0], [96.0, 1033.0], [96.1, 1035.0], [96.2, 1037.0], [96.3, 1038.0], [96.4, 1039.0], [96.5, 1040.0], [96.6, 1042.0], [96.7, 1043.0], [96.8, 1044.0], [96.9, 1045.0], [97.0, 1047.0], [97.1, 1048.0], [97.2, 1049.0], [97.3, 1050.0], [97.4, 1052.0], [97.5, 1053.0], [97.6, 1055.0], [97.7, 1056.0], [97.8, 1058.0], [97.9, 1060.0], [98.0, 1062.0], [98.1, 1064.0], [98.2, 1066.0], [98.3, 1068.0], [98.4, 1070.0], [98.5, 1072.0], [98.6, 1075.0], [98.7, 1078.0], [98.8, 1081.0], [98.9, 1085.0], [99.0, 1089.0], [99.1, 1095.0], [99.2, 1103.0], [99.3, 1112.0], [99.4, 1129.0], [99.5, 1160.0], [99.6, 1246.0], [99.7, 2037.0], [99.8, 2078.0], [99.9, 3069.0]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 16.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 17.0], [19.0, 17.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 22.0], [27.9, 22.0], [28.0, 22.0], [28.1, 22.0], [28.2, 22.0], [28.3, 22.0], [28.4, 22.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 23.0], [30.1, 23.0], [30.2, 23.0], [30.3, 23.0], [30.4, 23.0], [30.5, 23.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 23.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 24.0], [32.4, 24.0], [32.5, 24.0], [32.6, 24.0], [32.7, 24.0], [32.8, 24.0], [32.9, 24.0], [33.0, 24.0], [33.1, 24.0], [33.2, 24.0], [33.3, 24.0], [33.4, 24.0], [33.5, 24.0], [33.6, 24.0], [33.7, 24.0], [33.8, 24.0], [33.9, 24.0], [34.0, 24.0], [34.1, 24.0], [34.2, 24.0], [34.3, 24.0], [34.4, 24.0], [34.5, 25.0], [34.6, 25.0], [34.7, 25.0], [34.8, 25.0], [34.9, 25.0], [35.0, 25.0], [35.1, 25.0], [35.2, 25.0], [35.3, 25.0], [35.4, 25.0], [35.5, 25.0], [35.6, 25.0], [35.7, 25.0], [35.8, 25.0], [35.9, 25.0], [36.0, 25.0], [36.1, 25.0], [36.2, 25.0], [36.3, 25.0], [36.4, 25.0], [36.5, 25.0], [36.6, 25.0], [36.7, 26.0], [36.8, 26.0], [36.9, 26.0], [37.0, 26.0], [37.1, 26.0], [37.2, 26.0], [37.3, 26.0], [37.4, 26.0], [37.5, 26.0], [37.6, 26.0], [37.7, 26.0], [37.8, 26.0], [37.9, 26.0], [38.0, 26.0], [38.1, 26.0], [38.2, 26.0], [38.3, 26.0], [38.4, 26.0], [38.5, 26.0], [38.6, 26.0], [38.7, 26.0], [38.8, 26.0], [38.9, 27.0], [39.0, 27.0], [39.1, 27.0], [39.2, 27.0], [39.3, 27.0], [39.4, 27.0], [39.5, 27.0], [39.6, 27.0], [39.7, 27.0], [39.8, 27.0], [39.9, 27.0], [40.0, 27.0], [40.1, 27.0], [40.2, 27.0], [40.3, 27.0], [40.4, 27.0], [40.5, 27.0], [40.6, 27.0], [40.7, 27.0], [40.8, 27.0], [40.9, 27.0], [41.0, 28.0], [41.1, 28.0], [41.2, 28.0], [41.3, 28.0], [41.4, 28.0], [41.5, 28.0], [41.6, 28.0], [41.7, 28.0], [41.8, 28.0], [41.9, 28.0], [42.0, 28.0], [42.1, 28.0], [42.2, 28.0], [42.3, 28.0], [42.4, 28.0], [42.5, 28.0], [42.6, 28.0], [42.7, 28.0], [42.8, 28.0], [42.9, 28.0], [43.0, 28.0], [43.1, 29.0], [43.2, 29.0], [43.3, 29.0], [43.4, 29.0], [43.5, 29.0], [43.6, 29.0], [43.7, 29.0], [43.8, 29.0], [43.9, 29.0], [44.0, 29.0], [44.1, 29.0], [44.2, 29.0], [44.3, 29.0], [44.4, 29.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 29.0], [45.1, 29.0], [45.2, 30.0], [45.3, 30.0], [45.4, 30.0], [45.5, 30.0], [45.6, 30.0], [45.7, 30.0], [45.8, 30.0], [45.9, 30.0], [46.0, 30.0], [46.1, 30.0], [46.2, 30.0], [46.3, 30.0], [46.4, 30.0], [46.5, 30.0], [46.6, 30.0], [46.7, 30.0], [46.8, 30.0], [46.9, 30.0], [47.0, 30.0], [47.1, 31.0], [47.2, 31.0], [47.3, 31.0], [47.4, 31.0], [47.5, 31.0], [47.6, 31.0], [47.7, 31.0], [47.8, 31.0], [47.9, 31.0], [48.0, 31.0], [48.1, 31.0], [48.2, 31.0], [48.3, 31.0], [48.4, 31.0], [48.5, 31.0], [48.6, 31.0], [48.7, 31.0], [48.8, 31.0], [48.9, 31.0], [49.0, 31.0], [49.1, 32.0], [49.2, 32.0], [49.3, 32.0], [49.4, 32.0], [49.5, 32.0], [49.6, 32.0], [49.7, 32.0], [49.8, 32.0], [49.9, 32.0], [50.0, 32.0], [50.1, 32.0], [50.2, 32.0], [50.3, 32.0], [50.4, 32.0], [50.5, 32.0], [50.6, 32.0], [50.7, 32.0], [50.8, 32.0], [50.9, 32.0], [51.0, 33.0], [51.1, 33.0], [51.2, 33.0], [51.3, 33.0], [51.4, 33.0], [51.5, 33.0], [51.6, 33.0], [51.7, 33.0], [51.8, 33.0], [51.9, 33.0], [52.0, 33.0], [52.1, 33.0], [52.2, 33.0], [52.3, 33.0], [52.4, 33.0], [52.5, 33.0], [52.6, 33.0], [52.7, 33.0], [52.8, 34.0], [52.9, 34.0], [53.0, 34.0], [53.1, 34.0], [53.2, 34.0], [53.3, 34.0], [53.4, 34.0], [53.5, 34.0], [53.6, 34.0], [53.7, 34.0], [53.8, 34.0], [53.9, 34.0], [54.0, 34.0], [54.1, 34.0], [54.2, 34.0], [54.3, 34.0], [54.4, 34.0], [54.5, 34.0], [54.6, 35.0], [54.7, 35.0], [54.8, 35.0], [54.9, 35.0], [55.0, 35.0], [55.1, 35.0], [55.2, 35.0], [55.3, 35.0], [55.4, 35.0], [55.5, 35.0], [55.6, 35.0], [55.7, 35.0], [55.8, 35.0], [55.9, 35.0], [56.0, 35.0], [56.1, 35.0], [56.2, 35.0], [56.3, 36.0], [56.4, 36.0], [56.5, 36.0], [56.6, 36.0], [56.7, 36.0], [56.8, 36.0], [56.9, 36.0], [57.0, 36.0], [57.1, 36.0], [57.2, 36.0], [57.3, 36.0], [57.4, 36.0], [57.5, 36.0], [57.6, 36.0], [57.7, 36.0], [57.8, 36.0], [57.9, 36.0], [58.0, 37.0], [58.1, 37.0], [58.2, 37.0], [58.3, 37.0], [58.4, 37.0], [58.5, 37.0], [58.6, 37.0], [58.7, 37.0], [58.8, 37.0], [58.9, 37.0], [59.0, 37.0], [59.1, 37.0], [59.2, 37.0], [59.3, 37.0], [59.4, 37.0], [59.5, 37.0], [59.6, 38.0], [59.7, 38.0], [59.8, 38.0], [59.9, 38.0], [60.0, 38.0], [60.1, 38.0], [60.2, 38.0], [60.3, 38.0], [60.4, 38.0], [60.5, 38.0], [60.6, 38.0], [60.7, 38.0], [60.8, 38.0], [60.9, 38.0], [61.0, 38.0], [61.1, 38.0], [61.2, 39.0], [61.3, 39.0], [61.4, 39.0], [61.5, 39.0], [61.6, 39.0], [61.7, 39.0], [61.8, 39.0], [61.9, 39.0], [62.0, 39.0], [62.1, 39.0], [62.2, 39.0], [62.3, 39.0], [62.4, 39.0], [62.5, 39.0], [62.6, 40.0], [62.7, 40.0], [62.8, 40.0], [62.9, 40.0], [63.0, 40.0], [63.1, 40.0], [63.2, 40.0], [63.3, 40.0], [63.4, 40.0], [63.5, 40.0], [63.6, 40.0], [63.7, 40.0], [63.8, 40.0], [63.9, 40.0], [64.0, 40.0], [64.1, 41.0], [64.2, 41.0], [64.3, 41.0], [64.4, 41.0], [64.5, 41.0], [64.6, 41.0], [64.7, 41.0], [64.8, 41.0], [64.9, 41.0], [65.0, 41.0], [65.1, 41.0], [65.2, 41.0], [65.3, 41.0], [65.4, 42.0], [65.5, 42.0], [65.6, 42.0], [65.7, 42.0], [65.8, 42.0], [65.9, 42.0], [66.0, 42.0], [66.1, 42.0], [66.2, 42.0], [66.3, 42.0], [66.4, 42.0], [66.5, 42.0], [66.6, 42.0], [66.7, 43.0], [66.8, 43.0], [66.9, 43.0], [67.0, 43.0], [67.1, 43.0], [67.2, 43.0], [67.3, 43.0], [67.4, 43.0], [67.5, 43.0], [67.6, 43.0], [67.7, 43.0], [67.8, 43.0], [67.9, 43.0], [68.0, 44.0], [68.1, 44.0], [68.2, 44.0], [68.3, 44.0], [68.4, 44.0], [68.5, 44.0], [68.6, 44.0], [68.7, 44.0], [68.8, 44.0], [68.9, 44.0], [69.0, 44.0], [69.1, 45.0], [69.2, 45.0], [69.3, 45.0], [69.4, 45.0], [69.5, 45.0], [69.6, 45.0], [69.7, 45.0], [69.8, 45.0], [69.9, 45.0], [70.0, 45.0], [70.1, 45.0], [70.2, 45.0], [70.3, 46.0], [70.4, 46.0], [70.5, 46.0], [70.6, 46.0], [70.7, 46.0], [70.8, 46.0], [70.9, 46.0], [71.0, 46.0], [71.1, 46.0], [71.2, 46.0], [71.3, 47.0], [71.4, 47.0], [71.5, 47.0], [71.6, 47.0], [71.7, 47.0], [71.8, 47.0], [71.9, 47.0], [72.0, 47.0], [72.1, 47.0], [72.2, 47.0], [72.3, 47.0], [72.4, 48.0], [72.5, 48.0], [72.6, 48.0], [72.7, 48.0], [72.8, 48.0], [72.9, 48.0], [73.0, 48.0], [73.1, 48.0], [73.2, 48.0], [73.3, 49.0], [73.4, 49.0], [73.5, 49.0], [73.6, 49.0], [73.7, 49.0], [73.8, 49.0], [73.9, 49.0], [74.0, 49.0], [74.1, 49.0], [74.2, 50.0], [74.3, 50.0], [74.4, 50.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 51.0], [75.2, 51.0], [75.3, 51.0], [75.4, 51.0], [75.5, 51.0], [75.6, 51.0], [75.7, 51.0], [75.8, 51.0], [75.9, 52.0], [76.0, 52.0], [76.1, 52.0], [76.2, 52.0], [76.3, 52.0], [76.4, 52.0], [76.5, 52.0], [76.6, 52.0], [76.7, 52.0], [76.8, 53.0], [76.9, 53.0], [77.0, 53.0], [77.1, 53.0], [77.2, 53.0], [77.3, 53.0], [77.4, 53.0], [77.5, 54.0], [77.6, 54.0], [77.7, 54.0], [77.8, 54.0], [77.9, 54.0], [78.0, 54.0], [78.1, 54.0], [78.2, 54.0], [78.3, 55.0], [78.4, 55.0], [78.5, 55.0], [78.6, 55.0], [78.7, 55.0], [78.8, 55.0], [78.9, 55.0], [79.0, 56.0], [79.1, 56.0], [79.2, 56.0], [79.3, 56.0], [79.4, 56.0], [79.5, 56.0], [79.6, 57.0], [79.7, 57.0], [79.8, 57.0], [79.9, 57.0], [80.0, 57.0], [80.1, 57.0], [80.2, 58.0], [80.3, 58.0], [80.4, 58.0], [80.5, 58.0], [80.6, 58.0], [80.7, 58.0], [80.8, 59.0], [80.9, 59.0], [81.0, 59.0], [81.1, 59.0], [81.2, 59.0], [81.3, 59.0], [81.4, 60.0], [81.5, 60.0], [81.6, 60.0], [81.7, 60.0], [81.8, 60.0], [81.9, 61.0], [82.0, 61.0], [82.1, 61.0], [82.2, 61.0], [82.3, 61.0], [82.4, 62.0], [82.5, 62.0], [82.6, 62.0], [82.7, 62.0], [82.8, 62.0], [82.9, 63.0], [83.0, 63.0], [83.1, 63.0], [83.2, 63.0], [83.3, 63.0], [83.4, 64.0], [83.5, 64.0], [83.6, 64.0], [83.7, 64.0], [83.8, 65.0], [83.9, 65.0], [84.0, 65.0], [84.1, 65.0], [84.2, 66.0], [84.3, 66.0], [84.4, 66.0], [84.5, 66.0], [84.6, 67.0], [84.7, 67.0], [84.8, 67.0], [84.9, 67.0], [85.0, 68.0], [85.1, 68.0], [85.2, 68.0], [85.3, 69.0], [85.4, 69.0], [85.5, 69.0], [85.6, 69.0], [85.7, 70.0], [85.8, 70.0], [85.9, 70.0], [86.0, 71.0], [86.1, 71.0], [86.2, 71.0], [86.3, 72.0], [86.4, 72.0], [86.5, 72.0], [86.6, 73.0], [86.7, 73.0], [86.8, 74.0], [86.9, 74.0], [87.0, 74.0], [87.1, 75.0], [87.2, 75.0], [87.3, 75.0], [87.4, 76.0], [87.5, 76.0], [87.6, 77.0], [87.7, 77.0], [87.8, 78.0], [87.9, 78.0], [88.0, 78.0], [88.1, 79.0], [88.2, 79.0], [88.3, 80.0], [88.4, 80.0], [88.5, 81.0], [88.6, 81.0], [88.7, 82.0], [88.8, 82.0], [88.9, 83.0], [89.0, 83.0], [89.1, 84.0], [89.2, 84.0], [89.3, 85.0], [89.4, 86.0], [89.5, 86.0], [89.6, 87.0], [89.7, 87.0], [89.8, 88.0], [89.9, 88.0], [90.0, 89.0], [90.1, 90.0], [90.2, 90.0], [90.3, 91.0], [90.4, 92.0], [90.5, 92.0], [90.6, 93.0], [90.7, 94.0], [90.8, 94.0], [90.9, 95.0], [91.0, 96.0], [91.1, 97.0], [91.2, 98.0], [91.3, 98.0], [91.4, 99.0], [91.5, 100.0], [91.6, 102.0], [91.7, 103.0], [91.8, 104.0], [91.9, 105.0], [92.0, 106.0], [92.1, 107.0], [92.2, 109.0], [92.3, 110.0], [92.4, 112.0], [92.5, 114.0], [92.6, 115.0], [92.7, 117.0], [92.8, 119.0], [92.9, 121.0], [93.0, 123.0], [93.1, 126.0], [93.2, 129.0], [93.3, 131.0], [93.4, 134.0], [93.5, 137.0], [93.6, 140.0], [93.7, 144.0], [93.8, 148.0], [93.9, 152.0], [94.0, 158.0], [94.1, 163.0], [94.2, 168.0], [94.3, 175.0], [94.4, 182.0], [94.5, 189.0], [94.6, 198.0], [94.7, 210.0], [94.8, 223.0], [94.9, 236.0], [95.0, 256.0], [95.1, 304.0], [95.2, 1017.0], [95.3, 1022.0], [95.4, 1025.0], [95.5, 1028.0], [95.6, 1030.0], [95.7, 1032.0], [95.8, 1034.0], [95.9, 1035.0], [96.0, 1037.0], [96.1, 1038.0], [96.2, 1040.0], [96.3, 1041.0], [96.4, 1042.0], [96.5, 1044.0], [96.6, 1045.0], [96.7, 1047.0], [96.8, 1048.0], [96.9, 1050.0], [97.0, 1051.0], [97.1, 1052.0], [97.2, 1054.0], [97.3, 1055.0], [97.4, 1057.0], [97.5, 1058.0], [97.6, 1060.0], [97.7, 1061.0], [97.8, 1063.0], [97.9, 1065.0], [98.0, 1066.0], [98.1, 1068.0], [98.2, 1070.0], [98.3, 1072.0], [98.4, 1074.0], [98.5, 1077.0], [98.6, 1080.0], [98.7, 1083.0], [98.8, 1087.0], [98.9, 1091.0], [99.0, 1095.0], [99.1, 1101.0], [99.2, 1108.0], [99.3, 1116.0], [99.4, 1126.0], [99.5, 1144.0], [99.6, 1182.0], [99.7, 1251.0], [99.8, 2042.0], [99.9, 2206.0]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 794703.0, "series": [{"data": [[0.0, 794703.0], [1000.0, 34143.0], [1100.0, 3368.0], [1200.0, 1059.0], [1300.0, 192.0], [1400.0, 25.0], [100.0, 24433.0], [2000.0, 1121.0], [2100.0, 185.0], [2200.0, 58.0], [2300.0, 3.0], [3000.0, 864.0], [3100.0, 87.0], [200.0, 4384.0], [3200.0, 73.0], [3300.0, 5.0], [3400.0, 9.0], [4000.0, 24.0], [4200.0, 18.0], [4300.0, 48.0], [4100.0, 25.0], [4500.0, 2.0], [300.0, 239.0], [400.0, 18.0], [7100.0, 9.0], [7200.0, 17.0], [7300.0, 67.0], [7400.0, 1.0]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[0.0, 768676.0], [1000.0, 33197.0], [1100.0, 4632.0], [1200.0, 1241.0], [1300.0, 107.0], [1400.0, 59.0], [1500.0, 2.0], [100.0, 26940.0], [2000.0, 697.0], [2100.0, 175.0], [2200.0, 74.0], [2300.0, 23.0], [3000.0, 511.0], [3100.0, 48.0], [200.0, 4076.0], [3300.0, 1.0], [3200.0, 29.0], [4000.0, 10.0], [4100.0, 5.0], [300.0, 270.0], [400.0, 16.0], [7100.0, 26.0], [7200.0, 28.0], [7300.0, 55.0], [7500.0, 33.0]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4332.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1623755.0, "series": [{"data": [[0.0, 1623755.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 78024.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4332.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 403.02316312171575, "minX": 1.6095048E12, "maxY": 450.0, "series": [{"data": [[1.60950492E12, 450.0], [1.6095048E12, 405.34676803290375], [1.60950498E12, 446.06748269930785], [1.60950486E12, 450.0]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[1.60950492E12, 450.0], [1.6095048E12, 403.02316312171575], [1.60950498E12, 446.01028213166154], [1.60950486E12, 450.0]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60950498E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.40495867768595034, "minX": 1.0, "maxY": 3063.0, "series": [{"data": [[3.0, 3062.5], [5.0, 0.7727272727272726], [7.0, 0.6829268292682925], [8.0, 1020.0], [9.0, 0.8333333333333335], [10.0, 1019.0], [11.0, 1.0256410256410258], [13.0, 176.80459770114945], [14.0, 0.6], [15.0, 1.3043478260869565], [16.0, 2.0], [17.0, 132.9142857142857], [18.0, 2038.6666666666667], [19.0, 78.39999999999999], [20.0, 3055.6666666666665], [21.0, 1.8089887640449438], [22.0, 2.5], [23.0, 39.12048192771084], [24.0, 706.6153846153846], [25.0, 2.8666666666666676], [26.0, 2.2], [27.0, 4.3454545454545475], [28.0, 4.111111111111111], [29.0, 2.56842105263158], [30.0, 2.875], [31.0, 2.778947368421053], [32.0, 2.125], [33.0, 3.3402061855670095], [34.0, 3.363636363636364], [35.0, 2.9583333333333317], [36.0, 4.1], [37.0, 3.367346938775509], [38.0, 3.888888888888889], [39.0, 3.9540229885057476], [40.0, 3.2105263157894735], [41.0, 3.8152173913043486], [42.0, 4.0], [43.0, 4.397849462365592], [44.0, 4.133333333333333], [45.0, 3.517857142857144], [46.0, 4.166666666666667], [47.0, 4.353535353535354], [48.0, 4.294117647058823], [49.0, 4.416666666666667], [50.0, 3.999999999999999], [51.0, 5.747126436781608], [52.0, 4.0], [53.0, 4.938596491228068], [54.0, 4.0], [55.0, 4.0677966101694905], [56.0, 5.0], [57.0, 5.101010101010103], [58.0, 4.266666666666667], [59.0, 18.83544303797468], [60.0, 5.884615384615385], [61.0, 5.1089108910891055], [62.0, 64.47058823529412], [63.0, 4.928571428571431], [64.0, 5.0], [65.0, 5.539130434782607], [66.0, 590.2857142857142], [67.0, 5.352459016393443], [68.0, 5.454545454545453], [69.0, 10.569230769230773], [70.0, 4.636363636363636], [71.0, 6.504950495049503], [73.0, 37.0], [74.0, 9.714285714285715], [75.0, 6.128000000000001], [72.0, 1025.0], [76.0, 4.32], [77.0, 6.795698924731183], [78.0, 48.36666666666666], [79.0, 5.940170940170941], [80.0, 4.086956521739131], [81.0, 5.510344827586208], [82.0, 8.0], [83.0, 7.463636363636363], [84.0, 3.6999999999999997], [85.0, 6.953703703703703], [86.0, 8.3], [87.0, 9.56179775280899], [89.0, 13.013888888888893], [90.0, 9.999999999999998], [91.0, 9.030303030303031], [92.0, 11.4], [93.0, 13.56521739130435], [94.0, 10.941176470588234], [95.0, 10.042857142857146], [96.0, 11.147058823529411], [97.0, 9.870967741935486], [98.0, 9.428571428571427], [99.0, 12.631578947368421], [102.0, 25.210526315789476], [103.0, 12.234375], [104.0, 9.823529411764708], [105.0, 8.52272727272727], [106.0, 10.272727272727275], [107.0, 9.860759493670885], [108.0, 10.146341463414634], [109.0, 10.837837837837835], [110.0, 6.374999999999999], [111.0, 8.000000000000004], [112.0, 10.90909090909091], [113.0, 10.909999999999998], [114.0, 10.857142857142858], [115.0, 9.17105263157895], [116.0, 8.785714285714288], [117.0, 7.788461538461537], [118.0, 7.685185185185185], [119.0, 7.890000000000005], [120.0, 7.225806451612902], [121.0, 11.450000000000001], [122.0, 22.684210526315788], [123.0, 15.274509803921564], [124.0, 14.192982456140353], [125.0, 9.75903614457832], [126.0, 11.35135135135135], [127.0, 7.724409448818897], [128.0, 8.076923076923077], [129.0, 13.490196078431369], [131.0, 32.66666666666666], [132.0, 28.104166666666664], [133.0, 24.541666666666668], [134.0, 14.818181818181818], [135.0, 33.71153846153847], [136.0, 16.685039370078737], [137.0, 15.8], [138.0, 20.382716049382715], [139.0, 19.758620689655174], [140.0, 39.37837837837838], [141.0, 60.08], [142.0, 45.44999999999999], [143.0, 12.41379310344828], [144.0, 45.15151515151515], [145.0, 9.185567010309278], [146.0, 8.59712230215827], [147.0, 110.41935483870967], [148.0, 8.346534653465346], [149.0, 58.31818181818181], [150.0, 15.789473684210527], [151.0, 9.711864406779661], [152.0, 37.629629629629626], [153.0, 12.733333333333333], [154.0, 36.488095238095234], [155.0, 58.08333333333334], [156.0, 42.246753246753244], [157.0, 18.026315789473685], [158.0, 23.847058823529416], [159.0, 17.5], [160.0, 19.813559322033903], [161.0, 16.903225806451616], [162.0, 65.68253968253968], [163.0, 78.28571428571428], [164.0, 22.27272727272728], [165.0, 11.764705882352942], [166.0, 22.42857142857143], [167.0, 12.14285714285714], [168.0, 21.223214285714285], [169.0, 71.0], [170.0, 12.617187500000002], [172.0, 29.146341463414636], [173.0, 34.21568627450981], [174.0, 32.06666666666666], [175.0, 12.543478260869565], [176.0, 15.112244897959185], [177.0, 130.11111111111111], [178.0, 16.30882352941176], [179.0, 20.36111111111111], [180.0, 53.54166666666667], [181.0, 8.868852459016392], [182.0, 37.349999999999994], [183.0, 21.290322580645167], [184.0, 64.013698630137], [185.0, 29.666666666666668], [186.0, 32.85714285714285], [187.0, 59.68627450980392], [188.0, 41.07142857142857], [189.0, 129.0625], [190.0, 47.96551724137931], [191.0, 30.000000000000004], [192.0, 27.14285714285714], [193.0, 23.59259259259259], [194.0, 8.285714285714285], [195.0, 27.729411764705887], [196.0, 50.39024390243903], [197.0, 13.933333333333335], [198.0, 11.277372262773719], [199.0, 15.0], [200.0, 17.458333333333332], [201.0, 15.000000000000002], [202.0, 34.33557046979866], [203.0, 12.5], [204.0, 18.175925925925924], [205.0, 160.42857142857142], [206.0, 19.49079754601227], [207.0, 11.181818181818185], [208.0, 26.615894039735103], [209.0, 39.26190476190476], [210.0, 26.468965517241372], [211.0, 81.60000000000001], [212.0, 48.114285714285714], [213.0, 301.18181818181813], [214.0, 80.79591836734694], [215.0, 14.833333333333334], [216.0, 40.77235772357724], [217.0, 16.625], [218.0, 18.253968253968246], [219.0, 22.0], [220.0, 16.895999999999997], [221.0, 268.0], [222.0, 18.914893617021278], [223.0, 1020.5], [224.0, 37.440000000000005], [225.0, 9.0], [226.0, 22.75], [227.0, 50.22222222222222], [228.0, 22.32786885245902], [229.0, 115.63636363636363], [230.0, 29.01851851851853], [231.0, 93.25], [232.0, 27.33064516129032], [233.0, 18.61111111111111], [234.0, 14.619883040935672], [235.0, 11.4], [236.0, 15.856115107913663], [237.0, 264.5], [238.0, 15.559523809523814], [239.0, 15.999999999999998], [240.0, 38.714285714285715], [241.0, 18.88], [242.0, 30.28750000000001], [243.0, 15.722222222222223], [244.0, 14.727272727272723], [245.0, 19.809523809523807], [246.0, 14.557692307692312], [247.0, 426.2352941176471], [248.0, 35.043956043956044], [250.0, 31.40277777777776], [252.0, 22.485714285714288], [253.0, 14.08], [254.0, 17.662790697674417], [255.0, 20.75], [249.0, 1041.0], [257.0, 38.67741935483872], [256.0, 25.166666666666664], [258.0, 38.90625], [259.0, 42.66666666666667], [260.0, 23.09868421052632], [261.0, 24.166666666666664], [262.0, 18.722972972972983], [263.0, 16.449999999999996], [264.0, 16.212290502793294], [270.0, 24.77272727272728], [271.0, 28.5], [268.0, 31.698924731182792], [269.0, 102.74074074074075], [265.0, 22.23809523809523], [266.0, 23.070175438596493], [267.0, 26.050000000000004], [274.0, 57.172413793103445], [272.0, 31.05797101449275], [275.0, 391.0], [284.0, 29.075757575757578], [285.0, 73.76119402985076], [286.0, 40.513888888888886], [287.0, 32.610169491525426], [277.0, 229.375], [278.0, 30.466666666666665], [279.0, 31.211538461538463], [280.0, 32.27118644067797], [281.0, 49.51162790697674], [282.0, 32.36], [283.0, 41.526315789473685], [289.0, 24.36111111111111], [288.0, 23.419999999999998], [290.0, 44.08035714285713], [291.0, 22.52272727272727], [292.0, 19.15384615384615], [293.0, 19.809999999999995], [294.0, 48.648648648648646], [295.0, 23.31067961165049], [296.0, 20.499999999999996], [302.0, 120.33333333333334], [300.0, 101.83720930232559], [301.0, 25.01449275362319], [297.0, 33.11688311688311], [298.0, 57.5], [299.0, 47.86], [305.0, 37.45555555555554], [304.0, 82.87323943661971], [306.0, 16.915492957746476], [307.0, 26.477272727272727], [308.0, 24.373831775700936], [309.0, 12.219512195121949], [310.0, 17.255319148936163], [311.0, 22.038461538461537], [312.0, 75.5], [318.0, 21.106382978723406], [319.0, 26.578947368421055], [316.0, 22.61111111111111], [317.0, 24.281249999999996], [313.0, 23.877551020408166], [314.0, 26.202380952380956], [315.0, 22.04166666666666], [321.0, 23.964285714285708], [320.0, 26.545454545454547], [322.0, 33.17500000000001], [323.0, 23.38805970149254], [324.0, 26.684210526315788], [325.0, 26.23809523809523], [326.0, 22.194444444444446], [327.0, 22.8494623655914], [328.0, 21.365853658536587], [334.0, 31.666666666666668], [335.0, 23.12371134020618], [332.0, 68.44], [333.0, 22.445312500000007], [329.0, 18.14432989690722], [330.0, 19.187500000000007], [331.0, 15.218181818181819], [337.0, 38.15873015873014], [336.0, 19.058823529411764], [338.0, 20.0], [339.0, 26.806666666666672], [340.0, 15.0], [341.0, 18.499999999999993], [343.0, 43.125], [344.0, 17.05263157894737], [350.0, 22.535714285714285], [351.0, 20.964601769911507], [348.0, 23.095238095238095], [349.0, 15.127551020408166], [345.0, 28.45454545454545], [346.0, 32.75], [347.0, 26.977401129943505], [353.0, 25.739436619718322], [352.0, 23.8], [354.0, 24.264705882352935], [355.0, 29.425414364640865], [356.0, 24.0], [357.0, 13.506024096385543], [358.0, 20.0], [359.0, 16.446808510638302], [361.0, 19.35897435897437], [365.0, 45.499999999999986], [367.0, 37.05042016806723], [362.0, 25.96153846153846], [363.0, 22.862500000000004], [369.0, 7.783783783783785], [368.0, 5.5], [370.0, 12.0], [371.0, 16.460784313725494], [372.0, 17.5], [373.0, 18.758865248226947], [374.0, 16.0], [375.0, 21.938461538461524], [376.0, 20.7], [382.0, 23.0], [383.0, 29.09523809523809], [380.0, 41.55555555555556], [381.0, 25.75], [377.0, 22.008196721311485], [378.0, 21.0], [379.0, 24.504273504273517], [385.0, 42.6620689655172], [384.0, 148.25], [386.0, 18.666666666666664], [387.0, 22.23529411764706], [388.0, 16.333333333333332], [389.0, 17.630000000000003], [390.0, 22.5], [391.0, 22.1044776119403], [392.0, 22.513513513513512], [398.0, 40.14285714285714], [399.0, 46.58064516129033], [396.0, 23.5], [397.0, 34.0], [393.0, 15.468468468468473], [394.0, 17.545454545454547], [395.0, 19.902985074626862], [401.0, 202.22916666666666], [400.0, 48.16666666666666], [403.0, 90.73529411764702], [412.0, 24.142857142857142], [413.0, 23.54193548387097], [414.0, 19.000000000000004], [415.0, 25.094117647058823], [404.0, 50.25925925925925], [405.0, 27.04098360655737], [406.0, 38.0], [407.0, 28.86734693877552], [408.0, 59.5], [409.0, 35.024691358024675], [410.0, 27.666666666666668], [411.0, 36.93835616438355], [419.0, 27.58536585365854], [417.0, 35.75409836065573], [416.0, 28.428571428571423], [418.0, 35.47368421052632], [420.0, 22.615384615384617], [422.0, 95.0], [423.0, 49.214285714285715], [424.0, 40.307692307692314], [430.0, 26.436363636363637], [431.0, 26.914062500000007], [428.0, 16.9047619047619], [429.0, 25.476190476190485], [425.0, 26.26973684210526], [426.0, 17.4], [427.0, 21.259541984732824], [433.0, 17.467153284671543], [432.0, 13.857142857142858], [434.0, 16.518987341772156], [435.0, 17.024193548387107], [436.0, 23.625], [437.0, 35.285714285714285], [438.0, 40.16666666666667], [439.0, 45.71428571428572], [441.0, 57.52713178294571], [446.0, 30.343750000000007], [447.0, 24.957446808510646], [444.0, 14.740740740740742], [445.0, 26.341463414634152], [442.0, 27.244444444444436], [443.0, 22.771428571428576], [449.0, 30.317647058823532], [448.0, 19.76744186046512], [450.0, 22.579710144927528], [451.0, 35.0126582278481], [452.0, 33.729166666666664], [453.0, 21.82051282051282], [454.0, 75.0], [455.0, 85.0], [457.0, 52.0], [456.0, 76.0], [462.0, 78.8095238095238], [463.0, 41.92000000000002], [460.0, 2.7647058823529416], [461.0, 55.941176470588246], [458.0, 18.0], [459.0, 7.272727272727273], [465.0, 58.98373983739837], [464.0, 67.34883720930232], [466.0, 136.85714285714286], [467.0, 57.5], [468.0, 71.74242424242429], [469.0, 30.562500000000004], [470.0, 45.00000000000001], [471.0, 35.288888888888884], [472.0, 32.08888888888889], [478.0, 46.49019607843138], [476.0, 61.833333333333336], [477.0, 59.666666666666664], [473.0, 32.81481481481482], [474.0, 140.07971014492747], [475.0, 451.30000000000007], [481.0, 22.486486486486484], [480.0, 25.476190476190478], [482.0, 20.17968749999999], [483.0, 13.374999999999998], [484.0, 13.055555555555552], [485.0, 15.375], [486.0, 15.511627906976743], [487.0, 77.0], [490.0, 68.9090909090909], [492.0, 73.0125], [493.0, 31.614457831325304], [494.0, 44.88333333333333], [495.0, 30.0], [489.0, 78.0], [491.0, 67.73333333333335], [497.0, 19.916666666666668], [496.0, 32.81395348837209], [498.0, 172.42718446601938], [499.0, 42.699999999999996], [500.0, 42.68518518518519], [501.0, 35.25], [502.0, 48.06976744186046], [503.0, 48.23809523809524], [504.0, 21.727848101265838], [511.0, 18.846153846153847], [508.0, 27.380952380952365], [510.0, 21.041666666666668], [505.0, 12.0], [506.0, 34.82894736842105], [507.0, 26.0], [514.0, 31.869565217391308], [523.0, 40.714285714285715], [512.0, 167.1229508196722], [526.0, 36.85833333333332], [527.0, 19.084745762711865], [524.0, 55.63309352517988], [525.0, 27.615384615384617], [515.0, 10.6], [516.0, 26.401574803149604], [518.0, 18.413333333333327], [536.0, 63.36538461538462], [537.0, 27.576271186440678], [538.0, 30.8679245283019], [539.0, 32.38399999999999], [540.0, 17.233333333333334], [541.0, 29.49473684210526], [542.0, 38.0], [543.0, 24.34313725490197], [528.0, 37.99999999999999], [529.0, 47.578947368421055], [530.0, 39.84745762711864], [531.0, 31.183999999999997], [532.0, 18.881720430107528], [533.0, 117.36363636363636], [534.0, 25.416666666666664], [535.0, 27.823529411764714], [520.0, 32.53846153846153], [521.0, 20.545454545454547], [522.0, 62.57251908396949], [547.0, 37.49999999999999], [544.0, 21.17741935483872], [558.0, 53.69230769230769], [559.0, 39.95], [556.0, 63.515151515151516], [557.0, 38.210843373493944], [554.0, 119.22222222222223], [555.0, 83.83333333333333], [545.0, 21.637499999999992], [546.0, 21.651162790697676], [548.0, 25.66101694915254], [549.0, 31.906250000000004], [550.0, 51.25], [551.0, 30.4], [560.0, 76.0625], [574.0, 17.941176470588236], [575.0, 23.31818181818182], [572.0, 14.65], [573.0, 16.58108108108108], [570.0, 50.400000000000006], [571.0, 24.270588235294117], [568.0, 199.45205479452056], [569.0, 84.5773195876289], [561.0, 23.436507936507933], [562.0, 36.66666666666667], [563.0, 34.17204301075269], [564.0, 24.538461538461544], [565.0, 25.859999999999992], [566.0, 30.114754098360656], [567.0, 224.23030303030305], [552.0, 6.428571428571427], [553.0, 3.5], [577.0, 26.280701754385962], [587.0, 22.51282051282051], [576.0, 24.473684210526315], [590.0, 14.1], [591.0, 16.764227642276424], [588.0, 56.0], [589.0, 29.72268907563025], [579.0, 27.897435897435894], [578.0, 63.0], [581.0, 26.585365853658537], [583.0, 55.48648648648648], [582.0, 1036.0], [600.0, 25.112244897959187], [601.0, 15.345911949685533], [602.0, 12.436363636363634], [603.0, 13.584541062801929], [604.0, 13.0], [605.0, 15.614173228346452], [606.0, 16.86666666666667], [607.0, 23.036363636363642], [592.0, 15.285714285714288], [593.0, 13.700000000000001], [594.0, 75.43939393939395], [595.0, 47.97849462365591], [596.0, 22.846153846153847], [597.0, 47.15503875968993], [598.0, 56.78124999999999], [599.0, 57.88571428571429], [584.0, 56.20547945205479], [585.0, 29.943661971830988], [586.0, 17.068965517241377], [611.0, 22.21238938053098], [608.0, 26.33333333333333], [622.0, 50.42424242424243], [623.0, 44.94174757281552], [620.0, 30.5], [621.0, 227.35937500000009], [618.0, 24.833333333333325], [619.0, 178.77777777777774], [609.0, 26.258823529411764], [610.0, 26.19354838709678], [612.0, 22.34328358208955], [613.0, 25.309523809523817], [614.0, 28.017857142857146], [615.0, 207.75806451612902], [624.0, 28.5632183908046], [638.0, 5.720930232558136], [639.0, 12.857142857142858], [636.0, 44.99242424242423], [637.0, 4.125], [632.0, 16.214285714285715], [634.0, 14.0], [633.0, 13.0], [635.0, 30.4], [625.0, 22.721739130434784], [626.0, 16.082191780821915], [627.0, 17.981818181818184], [628.0, 16.9468085106383], [629.0, 17.911111111111108], [630.0, 14.447619047619048], [631.0, 13.717948717948717], [616.0, 215.18749999999997], [617.0, 19.63725490196078], [643.0, 23.538461538461537], [640.0, 25.48214285714287], [655.0, 13.729166666666671], [653.0, 23.727272727272723], [654.0, 16.032085561497336], [651.0, 11.717391304347828], [652.0, 22.457831325301207], [641.0, 24.733333333333334], [642.0, 16.9059829059829], [644.0, 20.246376811594203], [645.0, 12.119047619047617], [646.0, 14.922413793103441], [647.0, 18.196721311475404], [656.0, 11.166666666666668], [657.0, 11.0], [670.0, 62.82312925170067], [671.0, 26.235294117647054], [668.0, 144.4076923076923], [669.0, 22.666666666666668], [666.0, 20.64327485380118], [667.0, 32.521739130434774], [664.0, 12.945454545454552], [665.0, 8.0], [658.0, 50.07594936708859], [659.0, 917.3859649122807], [660.0, 570.655172413793], [661.0, 36.5], [662.0, 30.685714285714262], [663.0, 17.909090909090914], [648.0, 19.4407894736842], [649.0, 29.5], [650.0, 12.966824644549762], [675.0, 17.900000000000002], [672.0, 26.436893203883493], [686.0, 26.731958762886602], [687.0, 15.6], [684.0, 31.937499999999996], [685.0, 26.555555555555554], [682.0, 29.707317073170735], [683.0, 15.25], [673.0, 87.40000000000002], [674.0, 73.61666666666672], [676.0, 30.17610062893082], [677.0, 20.333333333333332], [678.0, 23.513157894736832], [679.0, 20.0], [688.0, 29.157894736842103], [702.0, 14.217391304347823], [703.0, 11.705882352941176], [700.0, 28.08791208791208], [701.0, 15.5], [698.0, 48.84397163120567], [699.0, 22.835616438356166], [696.0, 33.131578947368425], [697.0, 34.666666666666664], [690.0, 141.80666666666667], [691.0, 1049.0], [692.0, 164.94395280235983], [693.0, 19.916666666666664], [694.0, 14.93953488372093], [695.0, 20.11111111111111], [680.0, 23.20300751879699], [681.0, 24.75], [707.0, 73.11428571428569], [704.0, 26.25490196078431], [719.0, 73.0], [716.0, 35.91780821917809], [717.0, 27.555555555555546], [714.0, 21.94444444444445], [715.0, 27.939655172413804], [705.0, 354.7500000000001], [706.0, 134.69999999999996], [708.0, 28.58461538461538], [709.0, 19.29333333333334], [710.0, 34.75862068965519], [711.0, 33.21951219512196], [720.0, 34.8], [728.0, 88.95454545454545], [729.0, 48.42857142857142], [730.0, 50.20183486238531], [731.0, 37.78124999999999], [732.0, 25.611111111111114], [733.0, 26.583333333333336], [734.0, 39.18867924528303], [735.0, 34.86538461538461], [721.0, 74.13636363636364], [723.0, 142.89655172413788], [724.0, 227.62295081967216], [725.0, 181.8333333333334], [726.0, 74.44736842105264], [727.0, 21.380952380952383], [722.0, 63.18181818181818], [712.0, 25.462184873949578], [713.0, 27.607142857142858], [739.0, 33.13043478260872], [736.0, 35.473684210526315], [750.0, 51.65], [751.0, 239.79831932773104], [748.0, 120.6590909090909], [749.0, 87.52], [746.0, 20.578947368421055], [747.0, 21.346666666666664], [737.0, 33.734939759036166], [738.0, 34.090909090909086], [740.0, 37.75], [741.0, 31.16666666666667], [742.0, 37.01369863013699], [743.0, 25.5], [752.0, 21.291666666666668], [766.0, 19.519999999999996], [767.0, 30.4758064516129], [764.0, 19.529411764705884], [765.0, 14.858208955223878], [762.0, 19.666666666666668], [763.0, 22.362903225806452], [760.0, 19.407407407407412], [761.0, 21.008064516129025], [753.0, 28.250000000000007], [754.0, 28.222222222222225], [755.0, 24.524752475247524], [756.0, 26.399999999999995], [757.0, 19.195], [758.0, 15.736842105263154], [759.0, 16.26724137931034], [744.0, 21.840909090909086], [745.0, 22.98958333333333], [773.0, 33.48571428571428], [769.0, 19.445544554455445], [768.0, 23.21428571428571], [782.0, 29.51851851851852], [783.0, 29.114285714285714], [780.0, 52.289473684210535], [781.0, 26.28571428571429], [778.0, 27.093749999999996], [779.0, 270.8938053097345], [770.0, 27.0], [771.0, 28.157894736842106], [772.0, 22.25], [775.0, 36.512987012987026], [792.0, 42.45054945054944], [793.0, 39.67857142857143], [794.0, 28.69444444444445], [795.0, 32.138888888888886], [796.0, 25.179487179487175], [797.0, 18.54411764705883], [798.0, 15.999999999999996], [799.0, 18.75342465753425], [784.0, 21.97101449275362], [785.0, 16.890804597701166], [786.0, 28.97777777777778], [787.0, 21.42857142857143], [788.0, 57.106666666666676], [789.0, 28.794117647058822], [790.0, 51.916666666666664], [791.0, 40.67391304347825], [776.0, 23.333333333333332], [777.0, 23.669811320754715], [803.0, 28.153846153846157], [800.0, 141.6633663366337], [814.0, 108.0], [815.0, 60.63793103448275], [812.0, 106.54166666666666], [813.0, 46.58333333333333], [810.0, 628.3777777777777], [811.0, 13.588785046728976], [801.0, 40.40740740740741], [802.0, 29.12121212121212], [804.0, 31.075757575757567], [805.0, 78.0], [806.0, 90.5], [807.0, 19.77777777777777], [816.0, 161.89999999999998], [830.0, 28.3125], [831.0, 47.15384615384615], [828.0, 33.09166666666666], [829.0, 26.0], [826.0, 24.949367088607598], [827.0, 19.769230769230766], [824.0, 38.32584269662923], [825.0, 25.349999999999998], [817.0, 155.0], [818.0, 60.08888888888889], [819.0, 89.53125000000001], [820.0, 66.79508196721311], [821.0, 226.02040816326524], [822.0, 176.1454545454545], [823.0, 43.296703296703285], [808.0, 10.416666666666668], [809.0, 34.0], [835.0, 26.416666666666668], [832.0, 253.88151658767765], [847.0, 51.25], [844.0, 391.3725490196078], [846.0, 66.00613496932515], [842.0, 743.4869565217392], [843.0, 65.0], [833.0, 348.6315789473684], [834.0, 34.51121076233184], [836.0, 36.873417721519004], [837.0, 74.03333333333333], [838.0, 182.63636363636365], [839.0, 49.736842105263165], [848.0, 73.18518518518519], [863.0, 23.5], [861.0, 70.3913043478261], [862.0, 54.190476190476204], [856.0, 96.61249999999997], [860.0, 93.6103896103896], [849.0, 150.88235294117644], [850.0, 103.44615384615383], [851.0, 1173.0], [854.0, 90.12499999999997], [855.0, 83.69444444444443], [840.0, 117.69230769230772], [841.0, 326.4444444444444], [867.0, 35.42857142857143], [864.0, 20.918367346938773], [878.0, 60.714285714285715], [879.0, 50.223076923076896], [876.0, 57.5], [877.0, 77.05555555555557], [874.0, 63.541666666666664], [875.0, 57.027397260273965], [865.0, 19.0], [866.0, 18.448598130841123], [868.0, 42.64705882352942], [869.0, 44.62962962962963], [870.0, 47.34210526315789], [871.0, 24.98387096774193], [880.0, 76.00000000000001], [894.0, 32.74038461538461], [895.0, 47.82575757575758], [892.0, 24.37837837837838], [893.0, 21.903846153846153], [890.0, 32.936170212765965], [891.0, 23.25], [888.0, 19.866666666666667], [889.0, 24.97222222222223], [881.0, 36.73529411764705], [882.0, 170.43902439024393], [883.0, 36.65853658536585], [884.0, 42.46938775510204], [885.0, 39.49333333333334], [886.0, 623.4166666666666], [887.0, 344.5915492957747], [872.0, 30.54716981132076], [873.0, 24.373493975903614], [896.0, 65.15034965034964], [897.0, 44.29655172413795], [898.0, 63.3103448275862], [899.0, 27.44444444444446], [900.0, 92.63220995172088], [1.0, 3063.0]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[871.9683187313445, 89.4463626066232]], "isOverall": false, "label": "vertx-rxjava2-Aggregated", "isController": false}, {"data": [[2.0, 0.49999999999999994], [3.0, 0.40495867768595034], [5.0, 0.7558139534883722], [6.0, 1.0], [7.0, 0.724770642201835], [8.0, 1.5], [9.0, 1.066037735849057], [10.0, 1.0], [11.0, 1.207207207207207], [12.0, 1.0], [13.0, 1.2314049586776858], [14.0, 2.0], [15.0, 1.5809523809523804], [16.0, 2.0], [17.0, 1.6666666666666665], [19.0, 1.567164179104477], [21.0, 1.9024390243902447], [22.0, 2.1428571428571432], [23.0, 2.299065420560748], [24.0, 2.2727272727272725], [25.0, 2.10236220472441], [26.0, 2.833333333333333], [27.0, 1.9171974522292992], [28.0, 198.7142857142857], [29.0, 2.7272727272727266], [30.0, 209.2], [31.0, 10.92], [32.0, 66.75], [33.0, 18.72093023255814], [34.0, 3.1428571428571432], [35.0, 11.225806451612904], [36.0, 117.66666666666667], [37.0, 10.962121212121213], [38.0, 231.55555555555554], [39.0, 2.9416058394160576], [40.0, 3.9375], [41.0, 3.230158730158731], [42.0, 79.11111111111111], [43.0, 2.864406779661017], [44.0, 3.739130434782609], [45.0, 15.637362637362635], [46.0, 176.22222222222223], [47.0, 28.935483870967744], [48.0, 4.444444444444445], [49.0, 12.698275862068964], [50.0, 86.64], [51.0, 3.526946107784432], [52.0, 3.5], [53.0, 12.089552238805968], [54.0, 517.8333333333334], [55.0, 5.303030303030302], [56.0, 143.06666666666666], [57.0, 4.278688524590165], [58.0, 110.63157894736841], [59.0, 4.126760563380283], [60.0, 4.257142857142856], [61.0, 5.239583333333334], [62.0, 6.592592592592593], [63.0, 5.683168316831685], [64.0, 5.538461538461539], [65.0, 5.683333333333334], [66.0, 5.666666666666666], [67.0, 5.793103448275863], [69.0, 5.513333333333334], [70.0, 9.5], [71.0, 6.341085271317828], [72.0, 2.8], [73.0, 5.55371900826446], [74.0, 7.777777777777778], [75.0, 8.454545454545455], [77.0, 41.66115702479338], [78.0, 6.038461538461539], [79.0, 18.316326530612244], [80.0, 267.75], [81.0, 10.223529411764702], [83.0, 9.15686274509804], [82.0, 1050.5], [84.0, 5.75], [85.0, 22.456521739130434], [86.0, 5.6410256410256405], [87.0, 13.376811594202898], [88.0, 294.0], [89.0, 6.829931972789117], [90.0, 3.9999999999999996], [91.0, 32.13178294573643], [92.0, 7.000000000000001], [93.0, 20.771428571428572], [94.0, 32.02439024390244], [95.0, 9.181818181818183], [96.0, 7.1000000000000005], [97.0, 17.858585858585858], [98.0, 8.695652173913043], [99.0, 20.342105263157894], [101.0, 278.0], [102.0, 237.33333333333331], [100.0, 33.0], [103.0, 36.346938775510196], [104.0, 111.53061224489797], [105.0, 14.773584905660377], [106.0, 42.78082191780821], [107.0, 16.729729729729726], [108.0, 7.513513513513512], [109.0, 7.048192771084339], [110.0, 40.20547945205479], [111.0, 8.939393939393945], [112.0, 22.041666666666664], [113.0, 8.300884955752212], [114.0, 7.433962264150945], [115.0, 22.486842105263154], [116.0, 10.14], [117.0, 25.275362318840575], [118.0, 28.644067796610173], [119.0, 35.68181818181819], [120.0, 16.27027027027027], [121.0, 23.93939393939394], [122.0, 67.79], [123.0, 18.783505154639176], [124.0, 21.4320987654321], [125.0, 21.067415730337075], [126.0, 11.4], [127.0, 18.53030303030304], [128.0, 103.21212121212122], [129.0, 14.780000000000005], [130.0, 5.886597938144331], [131.0, 12.309941520467838], [132.0, 8.285714285714286], [133.0, 36.27777777777778], [134.0, 8.517241379310338], [135.0, 7.858823529411764], [136.0, 11.0], [137.0, 27.214285714285715], [138.0, 33.39583333333334], [139.0, 22.12820512820512], [140.0, 11.58974358974359], [141.0, 6.133333333333333], [142.0, 11.758620689655174], [143.0, 10.258064516129036], [144.0, 8.700000000000001], [145.0, 10.0], [146.0, 18.518518518518515], [147.0, 12.4], [148.0, 17.05194805194805], [149.0, 11.0], [150.0, 9.07070707070707], [151.0, 11.359999999999996], [152.0, 13.158536585365857], [153.0, 12.920634920634928], [154.0, 11.350649350649348], [155.0, 9.421052631578945], [156.0, 11.019417475728154], [157.0, 12.666666666666668], [158.0, 13.252427184466022], [159.0, 9.240000000000004], [160.0, 8.604477611940293], [161.0, 9.468750000000002], [162.0, 10.213740458015264], [163.0, 11.304347826086953], [164.0, 14.657142857142858], [165.0, 15.150943396226417], [166.0, 15.316455696202535], [167.0, 13.982456140350875], [168.0, 14.115789473684211], [169.0, 12.285714285714285], [170.0, 16.706422018348622], [171.0, 11.8], [172.0, 15.16], [173.0, 13.681818181818185], [174.0, 15.282608695652177], [175.0, 19.035087719298254], [176.0, 17.697916666666657], [177.0, 12.7], [178.0, 12.369426751592359], [179.0, 12.777777777777779], [182.0, 41.397590361445786], [183.0, 23.45], [184.0, 16.676923076923092], [185.0, 9.833333333333332], [186.0, 10.409638554216862], [188.0, 18.105263157894736], [189.0, 18.0], [190.0, 27.538461538461537], [191.0, 2.7692307692307687], [192.0, 4.90909090909091], [193.0, 19.60869565217391], [194.0, 49.714285714285715], [195.0, 43.40860215053762], [196.0, 20.920634920634924], [197.0, 14.727272727272727], [198.0, 19.144444444444442], [199.0, 15.320000000000002], [200.0, 18.637362637362642], [201.0, 19.099999999999994], [202.0, 18.22307692307692], [203.0, 21.999999999999996], [204.0, 18.3739837398374], [205.0, 22.444444444444443], [206.0, 15.29032258064516], [207.0, 16.68], [208.0, 25.313725490196074], [209.0, 26.892857142857142], [210.0, 22.91935483870968], [211.0, 19.5], [212.0, 13.788888888888888], [213.0, 15.210526315789473], [214.0, 14.429577464788728], [215.0, 16.666666666666668], [216.0, 17.24770642201835], [217.0, 21.285714285714285], [218.0, 32.66417910447761], [219.0, 18.384615384615383], [220.0, 19.619047619047613], [222.0, 15.137254901960793], [223.0, 9.75], [224.0, 12.231788079470201], [226.0, 27.191780821917817], [227.0, 37.42857142857142], [228.0, 21.050955414012737], [229.0, 11.4], [230.0, 14.318918918918925], [231.0, 114.7], [232.0, 14.29139072847683], [233.0, 130.88888888888889], [234.0, 39.81730769230769], [236.0, 34.23333333333333], [237.0, 15.5], [238.0, 34.28571428571428], [239.0, 39.238095238095234], [235.0, 1022.0], [240.0, 21.733333333333334], [241.0, 15.0], [242.0, 20.922413793103452], [244.0, 25.348484848484844], [245.0, 25.0], [246.0, 22.913385826771652], [247.0, 9.933333333333334], [248.0, 16.515151515151523], [249.0, 15.444444444444445], [250.0, 18.14634146341463], [252.0, 16.999999999999993], [253.0, 23.093750000000004], [254.0, 31.078124999999993], [255.0, 361.0], [257.0, 11.941176470588232], [256.0, 13.820627802690588], [258.0, 19.021428571428572], [259.0, 21.0], [260.0, 25.976190476190474], [261.0, 19.0], [262.0, 40.01709401709401], [263.0, 246.8], [264.0, 30.983333333333334], [270.0, 26.182539682539687], [271.0, 46.452830188679236], [268.0, 24.524822695035464], [269.0, 15.538461538461538], [265.0, 27.812500000000004], [266.0, 27.682926829268293], [267.0, 28.476190476190467], [273.0, 13.475247524752477], [272.0, 34.74074074074074], [274.0, 20.60294117647059], [275.0, 17.0], [276.0, 71.0], [277.0, 76.91428571428571], [278.0, 20.872340425531913], [279.0, 26.910714285714285], [280.0, 45.02941176470589], [286.0, 25.016666666666666], [287.0, 31.63636363636363], [284.0, 26.68817204301075], [285.0, 41.436619718309856], [281.0, 33.327586206896555], [282.0, 61.83783783783784], [283.0, 32.7027027027027], [289.0, 42.85365853658537], [288.0, 17.321100917431192], [290.0, 43.932203389830505], [291.0, 23.225352112676052], [292.0, 58.29032258064516], [293.0, 23.739130434782606], [294.0, 65.90384615384616], [295.0, 23.00000000000001], [296.0, 36.555555555555564], [302.0, 36.15384615384615], [303.0, 39.73376623376623], [300.0, 68.57692307692308], [301.0, 26.660714285714285], [297.0, 49.90983606557377], [298.0, 25.0], [299.0, 24.675213675213676], [305.0, 26.794117647058822], [304.0, 112.52380952380953], [306.0, 72.54545454545455], [316.0, 19.897435897435898], [317.0, 21.544117647058815], [318.0, 40.79032258064517], [319.0, 36.97540983606557], [309.0, 544.0], [310.0, 60.75229357798168], [311.0, 42.63414634146342], [312.0, 27.359550561797757], [313.0, 15.494505494505493], [314.0, 70.4468085106383], [315.0, 37.97260273972602], [321.0, 31.154639175257735], [320.0, 69.83783783783784], [322.0, 69.57142857142857], [323.0, 23.33576642335766], [324.0, 56.404761904761905], [325.0, 20.99], [326.0, 57.78260869565217], [327.0, 78.3380281690141], [328.0, 23.0], [334.0, 30.444444444444443], [335.0, 34.247863247863265], [332.0, 60.0], [333.0, 28.634730538922156], [329.0, 47.80000000000001], [330.0, 49.272727272727266], [331.0, 18.894736842105257], [337.0, 21.386861313868604], [336.0, 56.29629629629629], [338.0, 113.45454545454545], [339.0, 20.540322580645157], [340.0, 34.0], [341.0, 44.626086956521746], [343.0, 45.77064220183486], [344.0, 33.52941176470589], [350.0, 40.69230769230769], [351.0, 61.778947368421065], [348.0, 72.75], [349.0, 36.72727272727273], [345.0, 22.281481481481485], [346.0, 16.38888888888889], [347.0, 22.586538461538467], [354.0, 159.34782608695653], [353.0, 45.391999999999996], [355.0, 17.8060606060606], [364.0, 1028.0], [365.0, 53.6867469879518], [366.0, 45.0], [367.0, 33.59722222222221], [356.0, 776.5], [357.0, 14.474820143884893], [359.0, 20.416666666666668], [358.0, 1029.0], [360.0, 520.7], [361.0, 14.298013245033117], [362.0, 22.22222222222222], [363.0, 32.23469387755102], [369.0, 8.100000000000001], [368.0, 121.11111111111111], [370.0, 9.0], [371.0, 17.79629629629629], [372.0, 8.666666666666666], [373.0, 13.427083333333332], [375.0, 41.31034482758621], [376.0, 24.571428571428573], [383.0, 26.84251968503937], [380.0, 35.0], [381.0, 43.724409448818896], [377.0, 28.340206185567023], [378.0, 71.88888888888889], [379.0, 50.99199999999999], [386.0, 39.857142857142854], [385.0, 51.27083333333332], [387.0, 74.0493827160494], [396.0, 34.84], [397.0, 78.7717842323651], [398.0, 12.96774193548387], [399.0, 16.88111888111888], [388.0, 123.03333333333333], [389.0, 29.92233009708738], [390.0, 25.083333333333332], [391.0, 668.0], [393.0, 97.6024096385542], [394.0, 119.52941176470588], [395.0, 63.892857142857174], [401.0, 20.969072164948457], [400.0, 17.700000000000003], [402.0, 14.133333333333333], [403.0, 78.8141592920354], [404.0, 203.23529411764707], [405.0, 36.29545454545455], [406.0, 29.32653061224489], [407.0, 28.603773584905667], [408.0, 18.75], [414.0, 35.72727272727272], [415.0, 30.101265822784818], [412.0, 21.714285714285715], [413.0, 31.29411764705882], [409.0, 23.28682170542635], [411.0, 25.26256983240223], [417.0, 134.73684210526312], [416.0, 67.45454545454545], [418.0, 181.69230769230768], [419.0, 156.125], [420.0, 34.22826086956522], [421.0, 24.27692307692307], [422.0, 17.04347826086957], [423.0, 21.36220472440944], [424.0, 26.83783783783784], [430.0, 42.0], [431.0, 44.25], [428.0, 36.25], [429.0, 43.020408163265316], [425.0, 25.86111111111111], [426.0, 28.517857142857146], [427.0, 28.07692307692307], [433.0, 48.01724137931035], [432.0, 48.33333333333333], [434.0, 63.0], [435.0, 70.64285714285712], [436.0, 52.89189189189191], [437.0, 42.00000000000001], [438.0, 31.680851063829795], [439.0, 156.44444444444449], [440.0, 38.024096385542165], [444.0, 200.99999999999991], [445.0, 33.10144927536232], [446.0, 36.68571428571428], [447.0, 55.46428571428573], [441.0, 24.786885245901633], [449.0, 35.08955223880598], [448.0, 46.80000000000001], [450.0, 76.77777777777777], [451.0, 44.6078431372549], [452.0, 34.68421052631579], [453.0, 42.54081632653063], [454.0, 40.57142857142856], [457.0, 56.88888888888889], [462.0, 10.77777777777778], [463.0, 17.52564102564103], [460.0, 39.23308270676692], [461.0, 26.495575221238933], [458.0, 27.826086956521742], [459.0, 25.935483870967733], [465.0, 46.97674418604652], [464.0, 25.21621621621621], [466.0, 77.97297297297298], [467.0, 22.94845360824743], [468.0, 18.632653061224485], [469.0, 17.2], [470.0, 32.17213114754098], [471.0, 39.74999999999999], [472.0, 32.20454545454546], [478.0, 26.752941176470596], [479.0, 24.500000000000004], [476.0, 27.047619047619058], [477.0, 33.90909090909091], [473.0, 23.399999999999995], [474.0, 25.48979591836735], [475.0, 42.187499999999986], [492.0, 24.108108108108116], [481.0, 34.05128205128204], [480.0, 29.81944444444445], [482.0, 50.4], [493.0, 29.187499999999996], [494.0, 30.06329113924051], [495.0, 35.599999999999994], [486.0, 67.26573426573425], [487.0, 341.42857142857144], [488.0, 67.63861386138606], [489.0, 20.583333333333332], [490.0, 76.07407407407406], [491.0, 22.63888888888889], [497.0, 21.846153846153847], [496.0, 27.264705882352942], [498.0, 26.356521739130436], [499.0, 25.307692307692307], [500.0, 25.844961240310074], [501.0, 24.0], [502.0, 21.870748299319715], [503.0, 25.0], [504.0, 21.92682926829269], [508.0, 58.08256880733947], [510.0, 40.828571428571436], [505.0, 5.5], [506.0, 24.333333333333332], [507.0, 21.0], [517.0, 29.4], [513.0, 56.6875], [512.0, 38.51515151515152], [526.0, 34.679245283018865], [527.0, 26.913043478260867], [524.0, 22.830769230769228], [525.0, 29.79166666666667], [522.0, 16.924050632911392], [523.0, 21.40740740740741], [514.0, 24.787234042553187], [515.0, 25.666666666666668], [516.0, 26.647058823529417], [518.0, 23.391304347826082], [536.0, 27.53535353535354], [537.0, 23.746835443037984], [538.0, 37.03125], [539.0, 33.94117647058823], [540.0, 39.181818181818166], [541.0, 33.71724137931038], [542.0, 25.29411764705882], [543.0, 43.81132075471698], [528.0, 23.72881355932203], [529.0, 25.66666666666667], [530.0, 40.70967741935484], [531.0, 20.88461538461539], [532.0, 25.863636363636367], [533.0, 237.35294117647058], [534.0, 156.48333333333335], [535.0, 65.63333333333335], [520.0, 34.66455696202531], [521.0, 46.0], [547.0, 37.02836879432626], [544.0, 199.68115942028987], [558.0, 41.972972972972975], [559.0, 30.166666666666664], [556.0, 19.152173913043473], [557.0, 19.29545454545455], [554.0, 36.37313432835821], [555.0, 22.486033519553068], [545.0, 46.15942028985506], [546.0, 76.35294117647058], [548.0, 31.94444444444445], [549.0, 36.8], [550.0, 41.0], [551.0, 20.0], [560.0, 69.75], [574.0, 21.2], [575.0, 44.571428571428584], [572.0, 263.3103448275862], [573.0, 176.68292682926827], [570.0, 20.57142857142857], [571.0, 25.14399999999998], [568.0, 38.0], [569.0, 44.013157894736835], [561.0, 36.840425531914875], [562.0, 46.71875], [563.0, 27.559999999999988], [564.0, 40.2], [565.0, 29.249999999999996], [566.0, 22.545454545454547], [567.0, 22.409090909090907], [552.0, 16.610000000000003], [553.0, 28.487179487179485], [582.0, 20.91666666666667], [577.0, 83.1562499999999], [576.0, 15.57142857142857], [590.0, 242.72727272727263], [591.0, 153.0684931506849], [588.0, 17.04651162790697], [589.0, 18.01075268817204], [586.0, 35.473684210526315], [587.0, 23.735849056603772], [578.0, 22.5], [579.0, 25.502923976608187], [581.0, 70.51123595505615], [583.0, 19.967289719626173], [600.0, 43.666666666666664], [601.0, 45.5], [602.0, 56.0], [603.0, 48.27142857142857], [604.0, 66.11111111111111], [605.0, 51.328571428571415], [606.0, 31.671875], [607.0, 22.734042553191482], [592.0, 46.857142857142854], [593.0, 166.0204081632653], [594.0, 48.333333333333336], [595.0, 49.671052631578945], [596.0, 53.60526315789474], [597.0, 62.76315789473684], [598.0, 34.88461538461538], [599.0, 37.242603550295854], [584.0, 18.26666666666667], [585.0, 28.24074074074075], [611.0, 33.059701492537314], [608.0, 22.46551724137931], [622.0, 15.869565217391303], [623.0, 20.954545454545453], [620.0, 11.499999999999996], [621.0, 13.602649006622515], [618.0, 19.842105263157894], [619.0, 21.590909090909086], [609.0, 19.700000000000006], [610.0, 24.200000000000003], [612.0, 26.581081081081088], [613.0, 19.7051282051282], [614.0, 235.35937500000003], [615.0, 108.22448979591839], [624.0, 31.97777777777777], [638.0, 198.1904761904762], [639.0, 268.0], [636.0, 61.82456140350877], [637.0, 3.8181818181818183], [632.0, 18.062499999999996], [635.0, 47.87096774193547], [625.0, 39.0], [628.0, 64.31304347826091], [629.0, 44.48], [630.0, 15.000000000000002], [631.0, 15.982456140350877], [616.0, 29.21917808219179], [617.0, 27.23999999999999], [647.0, 36.66666666666665], [643.0, 22.78125], [640.0, 191.79646017699105], [654.0, 36.93877551020409], [655.0, 43.91304347826087], [651.0, 45.21874999999999], [652.0, 33.7086092715232], [641.0, 10.5], [642.0, 22.851851851851855], [644.0, 24.05084745762711], [645.0, 28.300000000000008], [646.0, 32.808510638297875], [656.0, 20.82722513089005], [671.0, 24.571428571428566], [669.0, 24.5], [670.0, 29.76612903225807], [667.0, 36.285714285714285], [668.0, 28.083333333333332], [664.0, 127.66265060240964], [666.0, 66.6019417475728], [657.0, 30.999999999999996], [658.0, 23.29940119760478], [659.0, 17.374999999999996], [660.0, 26.570370370370355], [661.0, 24.533333333333335], [662.0, 21.366972477064216], [663.0, 35.66666666666667], [648.0, 34.52173913043477], [650.0, 42.82352941176471], [678.0, 57.63888888888888], [673.0, 17.130434782608695], [672.0, 20.69934640522876], [686.0, 19.837209302325583], [687.0, 20.439999999999994], [684.0, 22.083798882681567], [685.0, 24.510638297872344], [682.0, 25.01204819277107], [683.0, 24.285714285714285], [674.0, 30.884615384615387], [676.0, 38.15384615384616], [677.0, 45.285714285714285], [679.0, 28.545454545454547], [696.0, 86.77005347593581], [697.0, 22.0], [698.0, 20.84070796460178], [699.0, 24.40909090909091], [700.0, 25.260504201680675], [701.0, 26.894736842105264], [702.0, 21.96470588235294], [703.0, 11.694444444444445], [688.0, 27.7029702970297], [689.0, 17.8], [690.0, 23.962264150943387], [692.0, 830.2736842105267], [693.0, 1057.0], [694.0, 595.7333333333333], [695.0, 683.8333333333335], [680.0, 40.18055555555556], [681.0, 30.545454545454543], [707.0, 31.10294117647059], [704.0, 16.86363636363636], [718.0, 50.0], [719.0, 24.695652173913047], [716.0, 35.70588235294118], [717.0, 146.06521739130434], [714.0, 25.82716049382717], [715.0, 21.171428571428578], [705.0, 24.074074074074076], [706.0, 99.64220183486238], [708.0, 46.599999999999994], [709.0, 134.78125], [710.0, 216.76271186440678], [711.0, 61.10769230769232], [720.0, 97.88888888888891], [728.0, 41.0921052631579], [729.0, 89.05063291139243], [730.0, 45.698113207547166], [731.0, 38.89189189189188], [732.0, 32.096774193548384], [733.0, 28.855421686746986], [734.0, 35.23809523809524], [735.0, 28.377049180327877], [721.0, 59.46153846153847], [723.0, 45.583333333333336], [724.0, 28.193548387096776], [725.0, 60.78181818181818], [726.0, 16.197183098591545], [727.0, 26.333333333333336], [722.0, 74.84615384615384], [712.0, 30.472222222222225], [713.0, 25.582278481012665], [739.0, 34.263888888888886], [736.0, 29.124999999999993], [750.0, 23.68333333333333], [751.0, 115.08333333333339], [748.0, 47.0983606557377], [749.0, 20.46774193548388], [746.0, 55.285714285714285], [747.0, 37.485507246376805], [737.0, 24.611111111111107], [738.0, 24.809523809523814], [740.0, 24.708333333333343], [741.0, 36.19318181818182], [742.0, 31.913043478260867], [743.0, 24.705882352941185], [752.0, 116.8857142857143], [766.0, 34.45945945945947], [767.0, 24.563025210084046], [764.0, 65.5], [765.0, 20.386792452830193], [762.0, 66.0], [763.0, 29.12080536912751], [760.0, 144.0], [761.0, 79.52112676056338], [753.0, 55.317460317460316], [754.0, 19.733333333333334], [755.0, 29.573770491803277], [756.0, 164.9142857142857], [757.0, 119.40000000000002], [759.0, 242.86585365853654], [758.0, 209.0], [744.0, 29.742424242424242], [745.0, 36.30303030303031], [771.0, 28.551401869158877], [768.0, 69.4], [782.0, 189.51666666666665], [783.0, 287.5862068965517], [780.0, 38.428571428571416], [781.0, 101.38938053097345], [778.0, 12.836363636363634], [779.0, 26.765957446808518], [769.0, 21.880952380952387], [770.0, 91.5], [772.0, 43.099999999999994], [773.0, 17.70642201834863], [774.0, 30.555555555555554], [775.0, 19.629370629370634], [786.0, 354.8055555555555], [784.0, 184.66666666666666], [798.0, 184.41304347826082], [799.0, 349.38571428571436], [796.0, 31.641791044776117], [797.0, 31.03508771929825], [794.0, 33.1], [795.0, 24.955882352941178], [792.0, 23.653846153846153], [793.0, 24.845238095238088], [787.0, 198.0909090909091], [788.0, 93.05555555555554], [789.0, 369.4921875], [790.0, 84.92957746478876], [791.0, 25.421052631578963], [776.0, 45.57142857142857], [777.0, 23.86896551724137], [803.0, 36.41666666666668], [800.0, 135.7], [814.0, 22.16842105263158], [815.0, 33.14285714285715], [812.0, 31.546666666666656], [813.0, 25.35365853658536], [810.0, 28.313253012048197], [811.0, 48.681159420289866], [801.0, 46.02272727272728], [802.0, 35.27868852459015], [804.0, 34.25423728813559], [805.0, 49.111111111111114], [806.0, 32.07692307692308], [807.0, 39.9120879120879], [816.0, 54.30434782608696], [830.0, 25.867187499999996], [831.0, 25.400000000000002], [828.0, 63.2436974789916], [829.0, 70.0508474576271], [826.0, 48.17073170731708], [827.0, 51.0], [824.0, 47.0344827586207], [825.0, 63.5], [817.0, 162.0], [818.0, 25.312000000000005], [819.0, 31.333333333333336], [820.0, 28.31896551724137], [821.0, 79.33333333333333], [822.0, 37.22580645161291], [823.0, 41.94736842105263], [808.0, 15.076923076923075], [809.0, 13.510204081632653], [835.0, 87.94444444444443], [832.0, 27.666666666666668], [846.0, 34.14117647058825], [844.0, 38.040816326530624], [845.0, 23.0], [842.0, 28.05084745762712], [843.0, 27.166666666666664], [833.0, 31.0], [834.0, 204.61151079136692], [836.0, 34.93617021276596], [837.0, 41.733333333333334], [838.0, 25.515873015873016], [839.0, 23.952380952380953], [848.0, 117.56790123456791], [862.0, 35.875], [860.0, 28.56613756613758], [861.0, 28.375], [858.0, 23.344827586206897], [859.0, 24.625], [856.0, 46.4214285714286], [857.0, 40.0], [849.0, 438.74999999999994], [850.0, 186.03750000000008], [851.0, 331.2], [852.0, 145.7065217391305], [853.0, 123.25000000000001], [854.0, 34.43859649122805], [855.0, 44.75], [840.0, 28.19548872180451], [841.0, 30.17647058823529], [870.0, 54.618556701030926], [866.0, 70.37956204379564], [864.0, 45.0], [878.0, 14.704545454545455], [879.0, 29.878048780487806], [876.0, 25.013793103448272], [877.0, 14.17], [874.0, 45.9189189189189], [875.0, 35.54545454545454], [867.0, 43.13999999999999], [868.0, 19.3756906077348], [869.0, 20.48148148148148], [871.0, 466.81553398058253], [888.0, 25.288135593220336], [889.0, 25.196078431372545], [890.0, 19.17647058823529], [891.0, 28.18390804597701], [892.0, 29.01960784313726], [893.0, 17.0373831775701], [894.0, 29.98816568047339], [895.0, 33.39583333333333], [880.0, 283.77777777777777], [881.0, 429.90082644628103], [882.0, 16.5], [883.0, 77.65740740740739], [884.0, 29.24615384615385], [885.0, 18.840490797546014], [886.0, 17.583333333333332], [887.0, 27.041666666666668], [872.0, 540.4269662921349], [873.0, 101.1951219512195], [896.0, 35.684684684684704], [897.0, 36.36170212765958], [898.0, 23.28510638297871], [899.0, 22.32967032967033], [900.0, 95.68285295455075], [1.0, 0.4615384615384615]], "isOverall": false, "label": "go", "isController": false}, {"data": [[869.052805759346, 91.97551404336605]], "isOverall": false, "label": "go-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 900.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 89770.55, "minX": 1.6095048E12, "maxY": 1281477.2, "series": [{"data": [[1.60950492E12, 1022882.1166666667], [1.6095048E12, 1001147.9], [1.60950498E12, 89770.55], [1.60950486E12, 1020810.4166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60950492E12, 1281477.2], [1.6095048E12, 1250615.8], [1.60950498E12, 112525.2], [1.60950486E12, 1279437.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60950498E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 80.00536212722044, "minX": 1.6095048E12, "maxY": 103.19862068965521, "series": [{"data": [[1.60950492E12, 93.52041280120551], [1.6095048E12, 80.00536212722044], [1.60950498E12, 97.78963158526304], [1.60950486E12, 93.69066191689953]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[1.60950492E12, 97.12912525105365], [1.6095048E12, 80.81486447658287], [1.60950498E12, 103.19862068965521], [1.60950486E12, 96.94441444122174]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60950498E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 79.99966578522023, "minX": 1.6095048E12, "maxY": 103.18950888192299, "series": [{"data": [[1.60950492E12, 93.51537786672489], [1.6095048E12, 79.99966578522023], [1.60950498E12, 97.77667106684302], [1.60950486E12, 93.68556835302374]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[1.60950492E12, 97.12461815933786], [1.6095048E12, 80.80929103460433], [1.60950498E12, 103.18950888192299], [1.60950486E12, 96.93817989441546]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60950498E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 27.342294696635836, "minX": 1.6095048E12, "maxY": 49.5565308254966, "series": [{"data": [[1.60950492E12, 29.492137539330507], [1.6095048E12, 27.342294696635836], [1.60950498E12, 37.25457018280729], [1.60950486E12, 35.78702426042884]], "isOverall": false, "label": "vertx-rxjava2", "isController": false}, {"data": [[1.60950492E12, 40.611603566163446], [1.6095048E12, 32.697814827639064], [1.60950498E12, 49.5565308254966], [1.60950486E12, 39.88076842534569]], "isOverall": false, "label": "go", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60950498E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6095048E12, "maxY": 7546.0, "series": [{"data": [[1.60950492E12, 7422.0], [1.6095048E12, 7546.0], [1.60950498E12, 3063.0], [1.60950486E12, 7358.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60950492E12, 0.0], [1.6095048E12, 0.0], [1.60950498E12, 0.0], [1.60950486E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60950492E12, 96.0], [1.6095048E12, 83.0], [1.60950498E12, 104.90000000000146], [1.60950486E12, 76.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60950492E12, 1081.9900000000016], [1.6095048E12, 1092.9900000000016], [1.60950498E12, 1102.0], [1.60950486E12, 1076.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60950492E12, 1016.0], [1.6095048E12, 190.0], [1.60950498E12, 1033.0], [1.60950486E12, 230.60000000000582]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60950498E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 22.0, "minX": 1000.0, "maxY": 1066.0, "series": [{"data": [[69000.0, 80.5], [67000.0, 81.0], [71000.0, 22.0], [73000.0, 98.0], [77000.0, 1027.0], [75000.0, 105.0], [81000.0, 75.5], [83000.0, 62.0], [87000.0, 53.0], [91000.0, 90.0], [93000.0, 109.0], [95000.0, 85.0], [97000.0, 92.0], [103000.0, 84.0], [117000.0, 73.0], [115000.0, 73.0], [1000.0, 32.0], [2000.0, 31.0], [3000.0, 32.0], [4000.0, 32.0], [5000.0, 32.0], [6000.0, 32.0], [7000.0, 32.0], [8000.0, 33.0], [9000.0, 33.0], [10000.0, 32.0], [11000.0, 32.0], [12000.0, 32.0], [13000.0, 32.0], [14000.0, 32.0], [15000.0, 32.0], [16000.0, 32.0], [17000.0, 31.0], [18000.0, 32.0], [19000.0, 32.0], [20000.0, 32.0], [21000.0, 32.0], [22000.0, 31.0], [23000.0, 32.0], [24000.0, 32.0], [25000.0, 31.0], [26000.0, 30.0], [27000.0, 30.0], [28000.0, 28.0], [29000.0, 30.0], [30000.0, 30.0], [31000.0, 30.0], [32000.0, 31.0], [34000.0, 31.0], [33000.0, 30.0], [35000.0, 27.0], [36000.0, 36.5], [37000.0, 30.0], [38000.0, 31.0], [39000.0, 32.0], [40000.0, 27.0], [41000.0, 30.0], [43000.0, 36.0], [42000.0, 65.0], [44000.0, 41.0], [45000.0, 62.0], [47000.0, 34.5], [46000.0, 38.0], [48000.0, 86.0], [49000.0, 23.0], [51000.0, 48.5], [50000.0, 49.5], [52000.0, 57.5], [53000.0, 49.5], [54000.0, 57.0], [55000.0, 91.0], [57000.0, 71.5], [56000.0, 81.5], [59000.0, 94.0], [58000.0, 125.0], [61000.0, 90.0], [60000.0, 37.0], [62000.0, 68.0], [63000.0, 68.0], [65000.0, 60.0], [64000.0, 35.0], [66000.0, 110.5], [68000.0, 60.0], [72000.0, 31.0], [70000.0, 96.0], [76000.0, 59.5], [78000.0, 72.0], [82000.0, 65.0], [86000.0, 103.0], [90000.0, 95.0], [88000.0, 108.0], [92000.0, 1066.0], [98000.0, 90.0], [96000.0, 39.0], [102000.0, 93.0], [104000.0, 87.5], [108000.0, 76.0], [112000.0, 103.0], [126000.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 126000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 22.0, "minX": 1000.0, "maxY": 1066.0, "series": [{"data": [[69000.0, 80.5], [67000.0, 81.0], [71000.0, 22.0], [73000.0, 98.0], [77000.0, 1027.0], [75000.0, 105.0], [81000.0, 75.5], [83000.0, 62.0], [87000.0, 53.0], [91000.0, 90.0], [93000.0, 109.0], [95000.0, 85.0], [97000.0, 92.0], [103000.0, 84.0], [117000.0, 73.0], [115000.0, 73.0], [1000.0, 32.0], [2000.0, 31.0], [3000.0, 32.0], [4000.0, 32.0], [5000.0, 32.0], [6000.0, 32.0], [7000.0, 32.0], [8000.0, 33.0], [9000.0, 33.0], [10000.0, 32.0], [11000.0, 32.0], [12000.0, 32.0], [13000.0, 32.0], [14000.0, 32.0], [15000.0, 32.0], [16000.0, 32.0], [17000.0, 31.0], [18000.0, 32.0], [19000.0, 32.0], [20000.0, 32.0], [21000.0, 32.0], [22000.0, 31.0], [23000.0, 32.0], [24000.0, 32.0], [25000.0, 31.0], [26000.0, 30.0], [27000.0, 30.0], [28000.0, 28.0], [29000.0, 30.0], [30000.0, 30.0], [31000.0, 30.0], [32000.0, 31.0], [34000.0, 31.0], [33000.0, 30.0], [35000.0, 27.0], [36000.0, 36.5], [37000.0, 30.0], [38000.0, 31.0], [39000.0, 32.0], [40000.0, 27.0], [41000.0, 30.0], [43000.0, 36.0], [42000.0, 65.0], [44000.0, 41.0], [45000.0, 62.0], [47000.0, 34.5], [46000.0, 38.0], [48000.0, 86.0], [49000.0, 23.0], [51000.0, 48.5], [50000.0, 49.5], [52000.0, 57.5], [53000.0, 49.5], [54000.0, 57.0], [55000.0, 91.0], [57000.0, 71.5], [56000.0, 81.5], [59000.0, 94.0], [58000.0, 125.0], [61000.0, 90.0], [60000.0, 37.0], [62000.0, 68.0], [63000.0, 68.0], [65000.0, 60.0], [64000.0, 35.0], [66000.0, 110.5], [68000.0, 60.0], [72000.0, 31.0], [70000.0, 96.0], [76000.0, 59.5], [78000.0, 72.0], [82000.0, 65.0], [86000.0, 103.0], [90000.0, 95.0], [88000.0, 108.0], [92000.0, 1066.0], [98000.0, 90.0], [96000.0, 39.0], [102000.0, 93.0], [104000.0, 87.5], [108000.0, 76.0], [112000.0, 103.0], [126000.0, 54.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 126000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 800.4333333333333, "minX": 1.6095048E12, "maxY": 9286.05, "series": [{"data": [[1.60950492E12, 9286.05], [1.6095048E12, 9077.416666666666], [1.60950498E12, 800.4333333333333], [1.60950486E12, 9271.283333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60950498E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 815.4, "minX": 1.6095048E12, "maxY": 9286.066666666668, "series": [{"data": [[1.60950492E12, 9286.066666666668], [1.6095048E12, 9062.433333333332], [1.60950498E12, 815.4], [1.60950486E12, 9271.283333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60950498E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 398.75, "minX": 1.6095048E12, "maxY": 4734.733333333334, "series": [{"data": [[1.60950492E12, 4730.283333333334], [1.6095048E12, 4538.0], [1.60950498E12, 416.65], [1.60950486E12, 4734.733333333334]], "isOverall": false, "label": "vertx-rxjava2-success", "isController": false}, {"data": [[1.60950492E12, 4555.783333333334], [1.6095048E12, 4524.433333333333], [1.60950498E12, 398.75], [1.60950486E12, 4536.55]], "isOverall": false, "label": "go-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60950498E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 815.4, "minX": 1.6095048E12, "maxY": 9286.066666666668, "series": [{"data": [[1.60950492E12, 9286.066666666668], [1.6095048E12, 9062.433333333332], [1.60950498E12, 815.4], [1.60950486E12, 9271.283333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60950498E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

